imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    # FriendOfSymfony Bundles
    - { resource: fos/fos_rest.yml }
    - { resource: fos/fos_user.yml }
    - { resource: @WbiApiUserBundle/Resources/config/oauth2.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        default_connection:       default
        connections:
            default:
                driver:   pdo_mysql
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
                # if using pdo_sqlite as your database driver:
                #   1. add the path in parameters.yml
                #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
                #   2. Uncomment database_path in parameters.yml.dist
                #   3. Uncomment next line:
                #     path:     "%database_path%"

    orm:
        default_entity_manager:  ~
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                naming_strategy: doctrine.orm.naming_strategy.underscore
                filters:
                    softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                        alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_translator:
                        type: annotation
                        prefix: Gedmo\Translator\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                        alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        alias: GedmoLoggable # (optional) it will default to the name set for the mappingmapping
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree # (optional) it will default to the name set for the mapping
                        is_bundle: false
# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

nelmio_api_doc: ~

stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            tree: true
            timestampable: true # not needed: listeners are not enabled by default
            softdeleteable: true;
            uploadable: true

    # Only used if you activated the Uploadable extension
    uploadable:
        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
        default_file_path:       %kernel.root_dir%/../web/uploads

        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter

        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo

liip_imagine:
    resolvers:
        small:
            web_path:
                web_root: %kernel.root_dir%/../web
                cache_prefix: media/cache/small
        medium:
            web_path:
                web_root: %kernel.root_dir%/../web
                cache_prefix: media/cache/medium
    filter_sets:
        small:
            quality:              ~
            jpeg_quality:         ~
            png_compression_level:  ~
            png_compression_filter: ~
            animated:             false
            format:               ~
            cache:                small
            data_loader:          ~
            default_image:        null
            filters:
                # use and setup the "relative_resize" filter
                relative_resize:

                    # given 50x40px, output 32x26px using "widen" option
                    widen: 200

        original:
            quality:              75
            jpeg_quality:         ~
            png_compression_level:  ~
            png_compression_filter: ~
            animated:             false
            format:               ~
            data_loader:          ~
            default_image:        null
            filters:
                # use and setup the "watermark" filter
                watermark:
                    # path to the watermark file (prepended with "%kernel.root_dir%")
                    image: Resources/data/watermarker.png
                    # size of the water mark relative to the input image
                    size: 0.6
                    # set the position of the watermark
                    position: center
            post_processors:
                optipng: { strip_all: true, level: 5 }
                jpegoptim: { strip_all: true, max: 75, progressive: true }
        medium:
            quality:              ~
            jpeg_quality:         ~
            png_compression_level:  ~
            png_compression_filter: ~
            animated:             false
            format:               ~
            cache:                medium
            data_loader:          ~
            default_image:        null
            filters:
                # use and setup the "relative_resize" filter
                relative_resize:

                    # given 50x40px, output 32x26px using "widen" option
                    widen: 400

        big:
            quality:              ~
            jpeg_quality:         ~
            png_compression_level:  ~
            png_compression_filter: ~
            animated:             false
            format:               ~
            cache:                default
            data_loader:          ~
            default_image:        null
            filters:
                # use and setup the "relative_resize" filter
                relative_resize:

                    # given 50x40px, output 32x26px using "widen" option
                    widen: 600

fos_oauth_server:
    db_driver:           orm
    client_class:        Wbi\Api\UserBundle\Entity\Client
    access_token_class:  Wbi\Api\UserBundle\Entity\AccessToken
    refresh_token_class: Wbi\Api\UserBundle\Entity\RefreshToken
    auth_code_class:     Wbi\Api\UserBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager             # This property will be used when valid credentials are given to load the user upon access token creation
        options:
            #key:                []
            # supported_scopes: string

            # Changing tokens and authcode lifetime
            access_token_lifetime: 3600
            refresh_token_lifetime: 1209600
            auth_code_lifetime: 3600

            # Token type to respond with. Currently only "Bearer" supported.
            #token_type: string

            #realm:

            # Enforce redirect_uri on input for both authorize and token steps.
            enforce_redirect: false

            # Enforce state to be passed in authorization (see RFC 6749, section 10.12)
#            enforce_state: true or false

#wbi_api_user:
#    oauth2:
#        client:
#            name: 'AngularJS app'
#            redirecturi: 'http://majdi.com:3000'
#            grant_types: ['token', 'authorization_code', 'password', 'client_credentials']